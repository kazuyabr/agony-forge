group 'com.agonyengine'
version '0.1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: 'org.owasp', name: 'dependency-check-gradle', version: '5.0.0-M3.1'
        classpath group: 'org.kordamp.gradle', name: 'stats-gradle-plugin', version: '0.2.2'
        classpath group: 'se.transmode.gradle', name: 'gradle-docker', version: '1.2'
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.1.5.RELEASE'
        classpath group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.4.0'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    mavenLocal()
}

dependencies {
    compile group: 'com.agonyforge', name: 'agony-forge-core', version: '0.1.4-SNAPSHOT'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
}

task buildDocker(type: Docker) {
    push = false
    applicationName = jar.getArchiveBaseName().get()
    dockerfile = file('src/main/docker/local/Dockerfile')
    tagVersion = "latest"
    tag = "scionaltera/${applicationName}"

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

build.dependsOn project.tasks.buildDocker

pitest {
    excludedClasses = [
        'com.agonyengine.forge.demo.AgonyForge',
        'com.agonyengine.forge.demo.config.*'
    ]
    excludedMethods = [
        'hashCode',
        'equals'
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

check.dependsOn project.tasks.pitest, project.tasks.dependencyCheckAnalyze, project.tasks.stats

// ensure pitest runs after junit, because pitest requires all tests to have passed
project.tasks.pitest.mustRunAfter test
